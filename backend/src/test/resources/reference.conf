# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cribbage.read-journal = "inmemory-read-journal"

akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = off
  loglevel = info
  log-dead-letters = off
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }
    serialization-bindings {
      "com.nigeleke.cribbage.json.CborSerializable" = jackson-json
    }

    debug {
      unhandled = on // enable DEBUG logging of unhandled messages
      router-misconfiguration = on // enable WARN logging of misconfigured routers
      receive = on // log at DEBUG level all messages sent to an actor if that entity receive method is a LoggingReceive
      autoreceive = off // enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      lifecycle = off // log all actor lifecycle events of all entity
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

inmemory-journal {
  circuit-breaker {
    max-failures = 10
    call-timeout = 600s
    reset-timeout = 30s
  }
}

inmemory-read-journal {
  refresh-interval = "100ms"

  offset-mode = "sequence"
  write-plugin = "inmemory-journal"

  max-buffer-size = "5000"
}
